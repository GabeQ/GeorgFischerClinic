<?xml version="1.0" encoding="UTF-8"?>

<resource.explorer version="1.0" name="SYS/BIOS" dir="" href="http://processors.wiki.ti.com/index.php/Category:SYSBIOS">

    <content name="Users Guide" href="C:/ti/bios_6_53_02_00/docs/Bios_User_Guide.pdf">
	<type>weblink</type>
    </content>
	<contents name="Generic Devices" desc="Generic Devices" icon="plugin://icons/obj16/targetFamily.png">
		<contents name="Custom ARM Device" desc="Custom ARM Device" icon="plugin://icons/obj16/target.png">
				<filter id="filter_2170809343255">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>Custom ARM Device</tag>
					<tag>Generic Devices</tag>
					</search.tags>
				</filter>
				<contents name="TI Target Examples" desc="SYS/BIOS Kernel Templates and Examples for TI targets." customPageType="genericNote">
				<filter id="filter_2171239337108">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>Custom ARM Device</tag>
					<tag>Generic Devices</tag>
					<tag>TI Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_2171239337108"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_CustomARMDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.TMS470.CustomTMS470Device"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dynamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_2171239337108"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_CustomARMDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.TMS470.CustomTMS470Device"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_2171474926947">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>Custom ARM Device</tag>
					<tag>Generic Devices</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_2171474926947"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_CustomARMDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.TMS470.CustomTMS470Device"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_2171474926947"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_CustomARMDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.TMS470.CustomTMS470Device"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_2171474926947"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_CustomARMDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.TMS470.CustomTMS470Device"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_2171474926947"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_CustomARMDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.TMS470.CustomTMS470Device"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_2171474926947"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_CustomARMDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.TMS470.CustomTMS470Device"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_2171474926947"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_CustomARMDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.TMS470.CustomTMS470Device"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_2171474926947"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_CustomARMDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.TMS470.CustomTMS470Device"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_2171474926947"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_CustomARMDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.TMS470.CustomTMS470Device"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_2171474926947"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_CustomARMDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.TMS470.CustomTMS470Device"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_2171474926947"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_CustomARMDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.TMS470.CustomTMS470Device"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_2171474926947"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_CustomARMDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.TMS470.CustomTMS470Device"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_2171474926947"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_CustomARMDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.TMS470.CustomTMS470Device"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
		</contents>
		<contents name="Custom C6000 Device" desc="Custom C6000 Device" icon="plugin://icons/obj16/target.png">
				<filter id="filter_2172453270782">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>Custom C6000 Device</tag>
					<tag>Generic Devices</tag>
					</search.tags>
				</filter>
				<contents name="TI Target Examples" desc="SYS/BIOS Kernel Templates and Examples for TI targets." customPageType="genericNote">
				<filter id="filter_2172453354124">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>Custom C6000 Device</tag>
					<tag>Generic Devices</tag>
					<tag>TI Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_251.projectspec">
					<filter.ref ref.id="filter_2172453354124"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_CustomC6000Device"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.CustomC6000Device"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dynamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_252.projectspec">
					<filter.ref ref.id="filter_2172453354124"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_CustomC6000Device"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.CustomC6000Device"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_2172453577981">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>Custom C6000 Device</tag>
					<tag>Generic Devices</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_265.projectspec">
					<filter.ref ref.id="filter_2172453577981"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_CustomC6000Device"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.CustomC6000Device"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_254.projectspec">
					<filter.ref ref.id="filter_2172453577981"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_CustomC6000Device"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.CustomC6000Device"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_255.projectspec">
					<filter.ref ref.id="filter_2172453577981"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_CustomC6000Device"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.CustomC6000Device"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_256.projectspec">
					<filter.ref ref.id="filter_2172453577981"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_CustomC6000Device"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.CustomC6000Device"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_257.projectspec">
					<filter.ref ref.id="filter_2172453577981"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_CustomC6000Device"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.CustomC6000Device"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_258.projectspec">
					<filter.ref ref.id="filter_2172453577981"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_CustomC6000Device"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.CustomC6000Device"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_259.projectspec">
					<filter.ref ref.id="filter_2172453577981"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_CustomC6000Device"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.CustomC6000Device"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_260.projectspec">
					<filter.ref ref.id="filter_2172453577981"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_CustomC6000Device"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.CustomC6000Device"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_262.projectspec">
					<filter.ref ref.id="filter_2172453577981"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_CustomC6000Device"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.CustomC6000Device"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_263.projectspec">
					<filter.ref ref.id="filter_2172453577981"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_CustomC6000Device"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.CustomC6000Device"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_264.projectspec">
					<filter.ref ref.id="filter_2172453577981"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_CustomC6000Device"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.CustomC6000Device"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_261.projectspec">
					<filter.ref ref.id="filter_2172453577981"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_CustomC6000Device"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.CustomC6000Device"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
		</contents>
		<contents name="Generic C64x+ Device" desc="Generic C64x+ Device" icon="plugin://icons/obj16/target.png">
				<filter id="filter_2172458114299">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>Generic C64x+ Device</tag>
					<tag>Generic Devices</tag>
					</search.tags>
				</filter>
				<contents name="TI Target Examples" desc="SYS/BIOS Kernel Templates and Examples for TI targets." customPageType="genericNote">
				<filter id="filter_2172458143312">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>Generic C64x+ Device</tag>
					<tag>Generic Devices</tag>
					<tag>TI Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_251.projectspec">
					<filter.ref ref.id="filter_2172458143312"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_GenericC64xpDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC64xPlusDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dynamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_252.projectspec">
					<filter.ref ref.id="filter_2172458143312"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_GenericC64xpDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC64xPlusDevice"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_2172458296628">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>Generic C64x+ Device</tag>
					<tag>Generic Devices</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_265.projectspec">
					<filter.ref ref.id="filter_2172458296628"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_GenericC64xpDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC64xPlusDevice"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_254.projectspec">
					<filter.ref ref.id="filter_2172458296628"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_GenericC64xpDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC64xPlusDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_255.projectspec">
					<filter.ref ref.id="filter_2172458296628"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_GenericC64xpDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC64xPlusDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_256.projectspec">
					<filter.ref ref.id="filter_2172458296628"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_GenericC64xpDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC64xPlusDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_257.projectspec">
					<filter.ref ref.id="filter_2172458296628"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_GenericC64xpDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC64xPlusDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_258.projectspec">
					<filter.ref ref.id="filter_2172458296628"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_GenericC64xpDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC64xPlusDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_259.projectspec">
					<filter.ref ref.id="filter_2172458296628"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_GenericC64xpDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC64xPlusDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_260.projectspec">
					<filter.ref ref.id="filter_2172458296628"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_GenericC64xpDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC64xPlusDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_262.projectspec">
					<filter.ref ref.id="filter_2172458296628"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_GenericC64xpDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC64xPlusDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_263.projectspec">
					<filter.ref ref.id="filter_2172458296628"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_GenericC64xpDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC64xPlusDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_264.projectspec">
					<filter.ref ref.id="filter_2172458296628"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_GenericC64xpDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC64xPlusDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_261.projectspec">
					<filter.ref ref.id="filter_2172458296628"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_GenericC64xpDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC64xPlusDevice"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
		</contents>
		<contents name="Generic C66xx Device" desc="Generic C66xx Device" icon="plugin://icons/obj16/target.png">
				<filter id="filter_2172459324609">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>Generic C66xx Device</tag>
					<tag>Generic Devices</tag>
					</search.tags>
				</filter>
				<contents name="TI Target Examples" desc="SYS/BIOS Kernel Templates and Examples for TI targets." customPageType="genericNote">
				<filter id="filter_2172459418476">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>Generic C66xx Device</tag>
					<tag>Generic Devices</tag>
					<tag>TI Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_251.projectspec">
					<filter.ref ref.id="filter_2172459418476"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_GenericC66xxDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC66xxDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dynamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_252.projectspec">
					<filter.ref ref.id="filter_2172459418476"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_GenericC66xxDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC66xxDevice"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_2172459811009">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>Generic C66xx Device</tag>
					<tag>Generic Devices</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_265.projectspec">
					<filter.ref ref.id="filter_2172459811009"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_GenericC66xxDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC66xxDevice"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_254.projectspec">
					<filter.ref ref.id="filter_2172459811009"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_GenericC66xxDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC66xxDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_255.projectspec">
					<filter.ref ref.id="filter_2172459811009"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_GenericC66xxDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC66xxDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_256.projectspec">
					<filter.ref ref.id="filter_2172459811009"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_GenericC66xxDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC66xxDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_257.projectspec">
					<filter.ref ref.id="filter_2172459811009"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_GenericC66xxDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC66xxDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_258.projectspec">
					<filter.ref ref.id="filter_2172459811009"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_GenericC66xxDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC66xxDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_259.projectspec">
					<filter.ref ref.id="filter_2172459811009"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_GenericC66xxDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC66xxDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_260.projectspec">
					<filter.ref ref.id="filter_2172459811009"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_GenericC66xxDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC66xxDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_262.projectspec">
					<filter.ref ref.id="filter_2172459811009"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_GenericC66xxDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC66xxDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_263.projectspec">
					<filter.ref ref.id="filter_2172459811009"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_GenericC66xxDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC66xxDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_264.projectspec">
					<filter.ref ref.id="filter_2172459811009"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_GenericC66xxDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC66xxDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_261.projectspec">
					<filter.ref ref.id="filter_2172459811009"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_GenericC66xxDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC66xxDevice"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
		</contents>
		<contents name="Generic C674x Device" desc="Generic C674x Device" icon="plugin://icons/obj16/target.png">
				<filter id="filter_2172460603186">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>Generic C674x Device</tag>
					<tag>Generic Devices</tag>
					</search.tags>
				</filter>
				<contents name="TI Target Examples" desc="SYS/BIOS Kernel Templates and Examples for TI targets." customPageType="genericNote">
				<filter id="filter_2172460643293">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>Generic C674x Device</tag>
					<tag>Generic Devices</tag>
					<tag>TI Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_251.projectspec">
					<filter.ref ref.id="filter_2172460643293"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_GenericC674xDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC674xDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dynamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_252.projectspec">
					<filter.ref ref.id="filter_2172460643293"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_GenericC674xDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC674xDevice"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_2172460746546">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>Generic C674x Device</tag>
					<tag>Generic Devices</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_265.projectspec">
					<filter.ref ref.id="filter_2172460746546"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_GenericC674xDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC674xDevice"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_254.projectspec">
					<filter.ref ref.id="filter_2172460746546"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_GenericC674xDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC674xDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_255.projectspec">
					<filter.ref ref.id="filter_2172460746546"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_GenericC674xDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC674xDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_256.projectspec">
					<filter.ref ref.id="filter_2172460746546"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_GenericC674xDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC674xDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_257.projectspec">
					<filter.ref ref.id="filter_2172460746546"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_GenericC674xDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC674xDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_258.projectspec">
					<filter.ref ref.id="filter_2172460746546"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_GenericC674xDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC674xDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_259.projectspec">
					<filter.ref ref.id="filter_2172460746546"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_GenericC674xDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC674xDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_260.projectspec">
					<filter.ref ref.id="filter_2172460746546"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_GenericC674xDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC674xDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_262.projectspec">
					<filter.ref ref.id="filter_2172460746546"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_GenericC674xDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC674xDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_263.projectspec">
					<filter.ref ref.id="filter_2172460746546"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_GenericC674xDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC674xDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_264.projectspec">
					<filter.ref ref.id="filter_2172460746546"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_GenericC674xDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC674xDevice"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_261.projectspec">
					<filter.ref ref.id="filter_2172460746546"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_GenericC674xDevice"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.C6000.GenericC674xDevice"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
		</contents>
		<contents name="Generic CortexA8 Device" desc="Generic CortexA8 Device" icon="plugin://icons/obj16/target.png">
				<filter id="filter_2172462165070">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>Generic CortexA8 Device</tag>
					<tag>Generic Devices</tag>
					</search.tags>
				</filter>
				<contents name="GNU Target Examples" desc="SYS/BIOS Kernel Templates and Examples for GNU targets." customPageType="genericNote">
				<filter id="filter_2172462171328">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>Generic CortexA8 Device</tag>
					<tag>Generic Devices</tag>
					<tag>GNU Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_53_02_00\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_328.projectspec">
					<filter.ref ref.id="filter_2172462171328"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_GenericCortexA8Device"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.TMS470.GenericCortexA8Device"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dynamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_53_02_00\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_329.projectspec">
					<filter.ref ref.id="filter_2172462171328"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_GenericCortexA8Device"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.TMS470.GenericCortexA8Device"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_2172462272590">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>Generic CortexA8 Device</tag>
					<tag>Generic Devices</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_53_02_00\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_342.projectspec">
					<filter.ref ref.id="filter_2172462272590"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_GenericCortexA8Device"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.TMS470.GenericCortexA8Device"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_53_02_00\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_331.projectspec">
					<filter.ref ref.id="filter_2172462272590"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_GenericCortexA8Device"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.TMS470.GenericCortexA8Device"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_53_02_00\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_332.projectspec">
					<filter.ref ref.id="filter_2172462272590"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_GenericCortexA8Device"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.TMS470.GenericCortexA8Device"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_53_02_00\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_333.projectspec">
					<filter.ref ref.id="filter_2172462272590"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_GenericCortexA8Device"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.TMS470.GenericCortexA8Device"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_53_02_00\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_334.projectspec">
					<filter.ref ref.id="filter_2172462272590"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_GenericCortexA8Device"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.TMS470.GenericCortexA8Device"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_53_02_00\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_335.projectspec">
					<filter.ref ref.id="filter_2172462272590"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_GenericCortexA8Device"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.TMS470.GenericCortexA8Device"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_53_02_00\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_336.projectspec">
					<filter.ref ref.id="filter_2172462272590"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_GenericCortexA8Device"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.TMS470.GenericCortexA8Device"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_53_02_00\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_337.projectspec">
					<filter.ref ref.id="filter_2172462272590"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_GenericCortexA8Device"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.TMS470.GenericCortexA8Device"/>
						</attributes>
					</type>
				</content>
				<content name="Semi-Hosting Example" desc="This example leverages Semi-Hosting for printf IO.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_53_02_00\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_343.projectspec">
					<filter.ref ref.id="filter_2172462272590"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="semihost_GenericCortexA8Device"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.TMS470.GenericCortexA8Device"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_53_02_00\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_339.projectspec">
					<filter.ref ref.id="filter_2172462272590"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_GenericCortexA8Device"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.TMS470.GenericCortexA8Device"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_53_02_00\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_340.projectspec">
					<filter.ref ref.id="filter_2172462272590"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_GenericCortexA8Device"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.TMS470.GenericCortexA8Device"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_53_02_00\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_341.projectspec">
					<filter.ref ref.id="filter_2172462272590"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_GenericCortexA8Device"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.TMS470.GenericCortexA8Device"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_53_02_00\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_338.projectspec">
					<filter.ref ref.id="filter_2172462272590"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_GenericCortexA8Device"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.TMS470.GenericCortexA8Device"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
				<contents name="TI Target Examples" desc="SYS/BIOS Kernel Templates and Examples for TI targets." customPageType="genericNote">
				<filter id="filter_2172462870776">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>Generic CortexA8 Device</tag>
					<tag>Generic Devices</tag>
					<tag>TI Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_15.projectspec">
					<filter.ref ref.id="filter_2172462870776"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_GenericCortexA8Device"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.TMS470.GenericCortexA8Device"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dynamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_16.projectspec">
					<filter.ref ref.id="filter_2172462870776"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_GenericCortexA8Device"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.TMS470.GenericCortexA8Device"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_2172463002189">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>Generic CortexA8 Device</tag>
					<tag>Generic Devices</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_29.projectspec">
					<filter.ref ref.id="filter_2172463002189"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_GenericCortexA8Device"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.TMS470.GenericCortexA8Device"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_18.projectspec">
					<filter.ref ref.id="filter_2172463002189"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_GenericCortexA8Device"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.TMS470.GenericCortexA8Device"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_19.projectspec">
					<filter.ref ref.id="filter_2172463002189"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_GenericCortexA8Device"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.TMS470.GenericCortexA8Device"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_20.projectspec">
					<filter.ref ref.id="filter_2172463002189"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_GenericCortexA8Device"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.TMS470.GenericCortexA8Device"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_21.projectspec">
					<filter.ref ref.id="filter_2172463002189"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_GenericCortexA8Device"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.TMS470.GenericCortexA8Device"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_22.projectspec">
					<filter.ref ref.id="filter_2172463002189"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_GenericCortexA8Device"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.TMS470.GenericCortexA8Device"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_23.projectspec">
					<filter.ref ref.id="filter_2172463002189"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_GenericCortexA8Device"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.TMS470.GenericCortexA8Device"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_24.projectspec">
					<filter.ref ref.id="filter_2172463002189"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_GenericCortexA8Device"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.TMS470.GenericCortexA8Device"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_26.projectspec">
					<filter.ref ref.id="filter_2172463002189"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_GenericCortexA8Device"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.TMS470.GenericCortexA8Device"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_27.projectspec">
					<filter.ref ref.id="filter_2172463002189"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_GenericCortexA8Device"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.TMS470.GenericCortexA8Device"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_28.projectspec">
					<filter.ref ref.id="filter_2172463002189"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_GenericCortexA8Device"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.TMS470.GenericCortexA8Device"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_25.projectspec">
					<filter.ref ref.id="filter_2172463002189"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_GenericCortexA8Device"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.TMS470.GenericCortexA8Device"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
		</contents>
		<contents name="Generic CortexA9 Device" desc="Generic CortexA9 Device" icon="plugin://icons/obj16/target.png">
				<filter id="filter_2172463739753">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>Generic CortexA9 Device</tag>
					<tag>Generic Devices</tag>
					</search.tags>
				</filter>
				<contents name="GNU Target Examples" desc="SYS/BIOS Kernel Templates and Examples for GNU targets." customPageType="genericNote">
				<filter id="filter_2172463745727">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>Generic CortexA9 Device</tag>
					<tag>Generic Devices</tag>
					<tag>GNU Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_53_02_00\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_344.projectspec">
					<filter.ref ref.id="filter_2172463745727"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_GenericCortexA9Device"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.TMS470.GenericCortexA9Device"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dynamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_53_02_00\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_345.projectspec">
					<filter.ref ref.id="filter_2172463745727"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_GenericCortexA9Device"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.TMS470.GenericCortexA9Device"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_2172463804891">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>Generic CortexA9 Device</tag>
					<tag>Generic Devices</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_53_02_00\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_358.projectspec">
					<filter.ref ref.id="filter_2172463804891"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_GenericCortexA9Device"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.TMS470.GenericCortexA9Device"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_53_02_00\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_347.projectspec">
					<filter.ref ref.id="filter_2172463804891"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_GenericCortexA9Device"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.TMS470.GenericCortexA9Device"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_53_02_00\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_348.projectspec">
					<filter.ref ref.id="filter_2172463804891"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_GenericCortexA9Device"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.TMS470.GenericCortexA9Device"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_53_02_00\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_349.projectspec">
					<filter.ref ref.id="filter_2172463804891"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_GenericCortexA9Device"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.TMS470.GenericCortexA9Device"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_53_02_00\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_350.projectspec">
					<filter.ref ref.id="filter_2172463804891"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_GenericCortexA9Device"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.TMS470.GenericCortexA9Device"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_53_02_00\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_351.projectspec">
					<filter.ref ref.id="filter_2172463804891"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_GenericCortexA9Device"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.TMS470.GenericCortexA9Device"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_53_02_00\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_352.projectspec">
					<filter.ref ref.id="filter_2172463804891"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_GenericCortexA9Device"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.TMS470.GenericCortexA9Device"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_53_02_00\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_353.projectspec">
					<filter.ref ref.id="filter_2172463804891"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_GenericCortexA9Device"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.TMS470.GenericCortexA9Device"/>
						</attributes>
					</type>
				</content>
				<content name="Semi-Hosting Example" desc="This example leverages Semi-Hosting for printf IO.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_53_02_00\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_359.projectspec">
					<filter.ref ref.id="filter_2172463804891"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="semihost_GenericCortexA9Device"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.TMS470.GenericCortexA9Device"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_53_02_00\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_355.projectspec">
					<filter.ref ref.id="filter_2172463804891"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_GenericCortexA9Device"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.TMS470.GenericCortexA9Device"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_53_02_00\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_356.projectspec">
					<filter.ref ref.id="filter_2172463804891"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_GenericCortexA9Device"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.TMS470.GenericCortexA9Device"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_53_02_00\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_357.projectspec">
					<filter.ref ref.id="filter_2172463804891"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_GenericCortexA9Device"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.TMS470.GenericCortexA9Device"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_53_02_00\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_354.projectspec">
					<filter.ref ref.id="filter_2172463804891"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_GenericCortexA9Device"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.TMS470.GenericCortexA9Device"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
		</contents>
		<contents name="Generic CortexA15 Device" desc="Generic CortexA15 Device" icon="plugin://icons/obj16/target.png">
				<filter id="filter_2172464692642">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>Generic CortexA15 Device</tag>
					<tag>Generic Devices</tag>
					</search.tags>
				</filter>
				<contents name="GNU Target Examples" desc="SYS/BIOS Kernel Templates and Examples for GNU targets." customPageType="genericNote">
				<filter id="filter_2172464698615">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>Generic CortexA15 Device</tag>
					<tag>Generic Devices</tag>
					<tag>GNU Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_53_02_00\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_360.projectspec">
					<filter.ref ref.id="filter_2172464698615"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_GenericCortexA15Device"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.TMS470.GenericCortexA15Device"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dynamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_53_02_00\resources\gnuTargetExamples\com_ti_rtsc_sysbios_example_361.projectspec">
					<filter.ref ref.id="filter_2172464698615"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_GenericCortexA15Device"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.TMS470.GenericCortexA15Device"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_2172464752944">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>Generic CortexA15 Device</tag>
					<tag>Generic Devices</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_53_02_00\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_374.projectspec">
					<filter.ref ref.id="filter_2172464752944"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_GenericCortexA15Device"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.TMS470.GenericCortexA15Device"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_53_02_00\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_363.projectspec">
					<filter.ref ref.id="filter_2172464752944"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_GenericCortexA15Device"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.TMS470.GenericCortexA15Device"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_53_02_00\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_364.projectspec">
					<filter.ref ref.id="filter_2172464752944"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_GenericCortexA15Device"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.TMS470.GenericCortexA15Device"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_53_02_00\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_365.projectspec">
					<filter.ref ref.id="filter_2172464752944"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_GenericCortexA15Device"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.TMS470.GenericCortexA15Device"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_53_02_00\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_366.projectspec">
					<filter.ref ref.id="filter_2172464752944"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_GenericCortexA15Device"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.TMS470.GenericCortexA15Device"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_53_02_00\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_367.projectspec">
					<filter.ref ref.id="filter_2172464752944"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_GenericCortexA15Device"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.TMS470.GenericCortexA15Device"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_53_02_00\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_368.projectspec">
					<filter.ref ref.id="filter_2172464752944"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_GenericCortexA15Device"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.TMS470.GenericCortexA15Device"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_53_02_00\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_369.projectspec">
					<filter.ref ref.id="filter_2172464752944"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_GenericCortexA15Device"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.TMS470.GenericCortexA15Device"/>
						</attributes>
					</type>
				</content>
				<content name="Semi-Hosting Example" desc="This example leverages Semi-Hosting for printf IO.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_53_02_00\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_375.projectspec">
					<filter.ref ref.id="filter_2172464752944"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="semihost_GenericCortexA15Device"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.TMS470.GenericCortexA15Device"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_53_02_00\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_371.projectspec">
					<filter.ref ref.id="filter_2172464752944"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_GenericCortexA15Device"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.TMS470.GenericCortexA15Device"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_53_02_00\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_372.projectspec">
					<filter.ref ref.id="filter_2172464752944"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_GenericCortexA15Device"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.TMS470.GenericCortexA15Device"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_53_02_00\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_373.projectspec">
					<filter.ref ref.id="filter_2172464752944"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_GenericCortexA15Device"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.TMS470.GenericCortexA15Device"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_53_02_00\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_370.projectspec">
					<filter.ref ref.id="filter_2172464752944"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_GenericCortexA15Device"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.TMS470.GenericCortexA15Device"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
		</contents>
		<contents name="Generic CortexM3 Device" desc="Generic CortexM3 Device" icon="plugin://icons/obj16/target.png">
				<filter id="filter_2172465538295">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>Generic CortexM3 Device</tag>
					<tag>Generic Devices</tag>
					</search.tags>
				</filter>
				<contents name="GNU Target Examples" desc="SYS/BIOS Kernel Templates and Examples for GNU targets." customPageType="genericNote">
				<filter id="filter_2172465545121">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>Generic CortexM3 Device</tag>
					<tag>Generic Devices</tag>
					<tag>GNU Target Examples</tag>
					</search.tags>
				</filter>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_2172465557068">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>Generic CortexM3 Device</tag>
					<tag>Generic Devices</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Semi-Hosting Example" desc="This example leverages Semi-Hosting for printf IO.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_53_02_00\resources\gnuTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_376.projectspec">
					<filter.ref ref.id="filter_2172465557068"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="semihost_GenericCortexM3Device"/>
							<attribute key="device.variant" value="com.ti.ccstudio.deviceModel.TMS470.GenericCortexM3Device"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
		</contents>
	</contents>
	<contents name="mmWave Sensors" desc="mmWave Sensors" icon="plugin://icons/obj16/targetFamily.png">
		<contents name="AWR1443" desc="AWR1443" icon="plugin://icons/obj16/target.png">
				<filter id="filter_2172486014016">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>AWR1443</tag>
					<tag>mmWave Sensors</tag>
					</search.tags>
				</filter>
				<contents name="TI Target Examples" desc="SYS/BIOS Kernel Templates and Examples for TI targets." customPageType="genericNote">
				<filter id="filter_2172487208398">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>AWR1443</tag>
					<tag>mmWave Sensors</tag>
					<tag>TI Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_30.projectspec">
					<filter.ref ref.id="filter_2172487208398"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_AWR1443"/>
							<attribute key="device.variant" value="Cortex R.AWR1443"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dynamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_31.projectspec">
					<filter.ref ref.id="filter_2172487208398"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_AWR1443"/>
							<attribute key="device.variant" value="Cortex R.AWR1443"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_2172487452167">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>AWR1443</tag>
					<tag>mmWave Sensors</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_44.projectspec">
					<filter.ref ref.id="filter_2172487452167"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_AWR1443"/>
							<attribute key="device.variant" value="Cortex R.AWR1443"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_33.projectspec">
					<filter.ref ref.id="filter_2172487452167"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_AWR1443"/>
							<attribute key="device.variant" value="Cortex R.AWR1443"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_34.projectspec">
					<filter.ref ref.id="filter_2172487452167"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_AWR1443"/>
							<attribute key="device.variant" value="Cortex R.AWR1443"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_35.projectspec">
					<filter.ref ref.id="filter_2172487452167"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_AWR1443"/>
							<attribute key="device.variant" value="Cortex R.AWR1443"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_36.projectspec">
					<filter.ref ref.id="filter_2172487452167"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_AWR1443"/>
							<attribute key="device.variant" value="Cortex R.AWR1443"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_37.projectspec">
					<filter.ref ref.id="filter_2172487452167"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_AWR1443"/>
							<attribute key="device.variant" value="Cortex R.AWR1443"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_38.projectspec">
					<filter.ref ref.id="filter_2172487452167"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_AWR1443"/>
							<attribute key="device.variant" value="Cortex R.AWR1443"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_39.projectspec">
					<filter.ref ref.id="filter_2172487452167"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_AWR1443"/>
							<attribute key="device.variant" value="Cortex R.AWR1443"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_41.projectspec">
					<filter.ref ref.id="filter_2172487452167"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_AWR1443"/>
							<attribute key="device.variant" value="Cortex R.AWR1443"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_42.projectspec">
					<filter.ref ref.id="filter_2172487452167"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_AWR1443"/>
							<attribute key="device.variant" value="Cortex R.AWR1443"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_43.projectspec">
					<filter.ref ref.id="filter_2172487452167"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_AWR1443"/>
							<attribute key="device.variant" value="Cortex R.AWR1443"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_40.projectspec">
					<filter.ref ref.id="filter_2172487452167"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_AWR1443"/>
							<attribute key="device.variant" value="Cortex R.AWR1443"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
		</contents>
		<contents name="AWR1642" desc="AWR1642" icon="plugin://icons/obj16/target.png">
			<contents name="Cortex R [ARM]" desc="Cortex R [ARM]" icon="plugin://icons/obj16/core.png">
				<filter id="filter_2172488084202">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>AWR1642</tag>
					<tag>mmWave Sensors</tag>
					</search.tags>
				</filter>
				<contents name="TI Target Examples" desc="SYS/BIOS Kernel Templates and Examples for TI targets." customPageType="genericNote">
				<filter id="filter_2172488965126">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>AWR1642</tag>
					<tag>mmWave Sensors</tag>
					<tag>TI Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_45.projectspec">
					<filter.ref ref.id="filter_2172488965126"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_AWR1642_CortexR"/>
							<attribute key="device.variant" value="Cortex R.AWR1642"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dynamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_46.projectspec">
					<filter.ref ref.id="filter_2172488965126"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_AWR1642_CortexR"/>
							<attribute key="device.variant" value="Cortex R.AWR1642"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_2172489070086">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>AWR1642</tag>
					<tag>mmWave Sensors</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_59.projectspec">
					<filter.ref ref.id="filter_2172489070086"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_AWR1642_CortexR"/>
							<attribute key="device.variant" value="Cortex R.AWR1642"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_48.projectspec">
					<filter.ref ref.id="filter_2172489070086"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_AWR1642_CortexR"/>
							<attribute key="device.variant" value="Cortex R.AWR1642"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_49.projectspec">
					<filter.ref ref.id="filter_2172489070086"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_AWR1642_CortexR"/>
							<attribute key="device.variant" value="Cortex R.AWR1642"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_50.projectspec">
					<filter.ref ref.id="filter_2172489070086"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_AWR1642_CortexR"/>
							<attribute key="device.variant" value="Cortex R.AWR1642"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_51.projectspec">
					<filter.ref ref.id="filter_2172489070086"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_AWR1642_CortexR"/>
							<attribute key="device.variant" value="Cortex R.AWR1642"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_52.projectspec">
					<filter.ref ref.id="filter_2172489070086"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_AWR1642_CortexR"/>
							<attribute key="device.variant" value="Cortex R.AWR1642"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_53.projectspec">
					<filter.ref ref.id="filter_2172489070086"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_AWR1642_CortexR"/>
							<attribute key="device.variant" value="Cortex R.AWR1642"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_54.projectspec">
					<filter.ref ref.id="filter_2172489070086"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_AWR1642_CortexR"/>
							<attribute key="device.variant" value="Cortex R.AWR1642"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_56.projectspec">
					<filter.ref ref.id="filter_2172489070086"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_AWR1642_CortexR"/>
							<attribute key="device.variant" value="Cortex R.AWR1642"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_57.projectspec">
					<filter.ref ref.id="filter_2172489070086"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_AWR1642_CortexR"/>
							<attribute key="device.variant" value="Cortex R.AWR1642"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_58.projectspec">
					<filter.ref ref.id="filter_2172489070086"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_AWR1642_CortexR"/>
							<attribute key="device.variant" value="Cortex R.AWR1642"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_55.projectspec">
					<filter.ref ref.id="filter_2172489070086"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_AWR1642_CortexR"/>
							<attribute key="device.variant" value="Cortex R.AWR1642"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
			</contents>
			<contents name="C67XX [C6000]" desc="C67XX [C6000]" icon="plugin://icons/obj16/core.png">
				<filter id="filter_2172489573837">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>AWR1642</tag>
					<tag>mmWave Sensors</tag>
					</search.tags>
				</filter>
				<contents name="TI Target Examples" desc="SYS/BIOS Kernel Templates and Examples for TI targets." customPageType="genericNote">
				<filter id="filter_2172489608539">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>AWR1642</tag>
					<tag>mmWave Sensors</tag>
					<tag>TI Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_266.projectspec">
					<filter.ref ref.id="filter_2172489608539"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_AWR1642_C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.AWR1642"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dynamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_267.projectspec">
					<filter.ref ref.id="filter_2172489608539"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_AWR1642_C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.AWR1642"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_2172489663152">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>AWR1642</tag>
					<tag>mmWave Sensors</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_280.projectspec">
					<filter.ref ref.id="filter_2172489663152"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_AWR1642_C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.AWR1642"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_269.projectspec">
					<filter.ref ref.id="filter_2172489663152"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_AWR1642_C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.AWR1642"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_270.projectspec">
					<filter.ref ref.id="filter_2172489663152"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_AWR1642_C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.AWR1642"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_271.projectspec">
					<filter.ref ref.id="filter_2172489663152"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_AWR1642_C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.AWR1642"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_272.projectspec">
					<filter.ref ref.id="filter_2172489663152"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_AWR1642_C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.AWR1642"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_273.projectspec">
					<filter.ref ref.id="filter_2172489663152"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_AWR1642_C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.AWR1642"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_274.projectspec">
					<filter.ref ref.id="filter_2172489663152"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_AWR1642_C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.AWR1642"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_275.projectspec">
					<filter.ref ref.id="filter_2172489663152"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_AWR1642_C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.AWR1642"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_277.projectspec">
					<filter.ref ref.id="filter_2172489663152"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_AWR1642_C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.AWR1642"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_278.projectspec">
					<filter.ref ref.id="filter_2172489663152"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_AWR1642_C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.AWR1642"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_279.projectspec">
					<filter.ref ref.id="filter_2172489663152"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_AWR1642_C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.AWR1642"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_276.projectspec">
					<filter.ref ref.id="filter_2172489663152"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_AWR1642_C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.AWR1642"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
			</contents>
		</contents>
		<contents name="AWR1843" desc="AWR1843" icon="plugin://icons/obj16/target.png">
			<contents name="Cortex R [ARM]" desc="Cortex R [ARM]" icon="plugin://icons/obj16/core.png">
				<filter id="filter_2172489973196">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>AWR1843</tag>
					<tag>mmWave Sensors</tag>
					</search.tags>
				</filter>
				<contents name="TI Target Examples" desc="SYS/BIOS Kernel Templates and Examples for TI targets." customPageType="genericNote">
				<filter id="filter_2172490624574">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>AWR1843</tag>
					<tag>mmWave Sensors</tag>
					<tag>TI Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_2172490624574"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_AWR1843_CortexR"/>
							<attribute key="device.variant" value="Cortex R.AWR1843"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dynamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_2172490624574"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_AWR1843_CortexR"/>
							<attribute key="device.variant" value="Cortex R.AWR1843"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_2172490705071">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>AWR1843</tag>
					<tag>mmWave Sensors</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_2172490705071"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_AWR1843_CortexR"/>
							<attribute key="device.variant" value="Cortex R.AWR1843"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_2172490705071"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_AWR1843_CortexR"/>
							<attribute key="device.variant" value="Cortex R.AWR1843"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_2172490705071"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_AWR1843_CortexR"/>
							<attribute key="device.variant" value="Cortex R.AWR1843"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_2172490705071"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_AWR1843_CortexR"/>
							<attribute key="device.variant" value="Cortex R.AWR1843"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_2172490705071"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_AWR1843_CortexR"/>
							<attribute key="device.variant" value="Cortex R.AWR1843"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_2172490705071"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_AWR1843_CortexR"/>
							<attribute key="device.variant" value="Cortex R.AWR1843"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_2172490705071"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_AWR1843_CortexR"/>
							<attribute key="device.variant" value="Cortex R.AWR1843"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_2172490705071"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_AWR1843_CortexR"/>
							<attribute key="device.variant" value="Cortex R.AWR1843"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_2172490705071"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_AWR1843_CortexR"/>
							<attribute key="device.variant" value="Cortex R.AWR1843"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_2172490705071"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_AWR1843_CortexR"/>
							<attribute key="device.variant" value="Cortex R.AWR1843"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_2172490705071"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_AWR1843_CortexR"/>
							<attribute key="device.variant" value="Cortex R.AWR1843"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_2172490705071"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_AWR1843_CortexR"/>
							<attribute key="device.variant" value="Cortex R.AWR1843"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
			</contents>
			<contents name="C67XX [C6000]" desc="C67XX [C6000]" icon="plugin://icons/obj16/core.png">
				<filter id="filter_2172491138565">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>AWR1843</tag>
					<tag>mmWave Sensors</tag>
					</search.tags>
				</filter>
				<contents name="TI Target Examples" desc="SYS/BIOS Kernel Templates and Examples for TI targets." customPageType="genericNote">
				<filter id="filter_2172491162173">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>AWR1843</tag>
					<tag>mmWave Sensors</tag>
					<tag>TI Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_251.projectspec">
					<filter.ref ref.id="filter_2172491162173"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_AWR1843_C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.AWR1843"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dynamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_252.projectspec">
					<filter.ref ref.id="filter_2172491162173"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_AWR1843_C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.AWR1843"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_2172491213373">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>AWR1843</tag>
					<tag>mmWave Sensors</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_265.projectspec">
					<filter.ref ref.id="filter_2172491213373"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_AWR1843_C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.AWR1843"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_254.projectspec">
					<filter.ref ref.id="filter_2172491213373"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_AWR1843_C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.AWR1843"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_255.projectspec">
					<filter.ref ref.id="filter_2172491213373"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_AWR1843_C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.AWR1843"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_256.projectspec">
					<filter.ref ref.id="filter_2172491213373"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_AWR1843_C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.AWR1843"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_257.projectspec">
					<filter.ref ref.id="filter_2172491213373"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_AWR1843_C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.AWR1843"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_258.projectspec">
					<filter.ref ref.id="filter_2172491213373"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_AWR1843_C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.AWR1843"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_259.projectspec">
					<filter.ref ref.id="filter_2172491213373"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_AWR1843_C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.AWR1843"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_260.projectspec">
					<filter.ref ref.id="filter_2172491213373"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_AWR1843_C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.AWR1843"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_262.projectspec">
					<filter.ref ref.id="filter_2172491213373"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_AWR1843_C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.AWR1843"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_263.projectspec">
					<filter.ref ref.id="filter_2172491213373"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_AWR1843_C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.AWR1843"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_264.projectspec">
					<filter.ref ref.id="filter_2172491213373"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_AWR1843_C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.AWR1843"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_261.projectspec">
					<filter.ref ref.id="filter_2172491213373"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_AWR1843_C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.AWR1843"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
			</contents>
		</contents>
		<contents name="IWR1443" desc="IWR1443" icon="plugin://icons/obj16/target.png">
				<filter id="filter_2172491632929">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>IWR1443</tag>
					<tag>mmWave Sensors</tag>
					</search.tags>
				</filter>
				<contents name="TI Target Examples" desc="SYS/BIOS Kernel Templates and Examples for TI targets." customPageType="genericNote">
				<filter id="filter_2172491965444">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>IWR1443</tag>
					<tag>mmWave Sensors</tag>
					<tag>TI Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_60.projectspec">
					<filter.ref ref.id="filter_2172491965444"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_IWR1443"/>
							<attribute key="device.variant" value="Cortex R.IWR1443"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dynamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_61.projectspec">
					<filter.ref ref.id="filter_2172491965444"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_IWR1443"/>
							<attribute key="device.variant" value="Cortex R.IWR1443"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_2172492044235">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>IWR1443</tag>
					<tag>mmWave Sensors</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_74.projectspec">
					<filter.ref ref.id="filter_2172492044235"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_IWR1443"/>
							<attribute key="device.variant" value="Cortex R.IWR1443"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_63.projectspec">
					<filter.ref ref.id="filter_2172492044235"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_IWR1443"/>
							<attribute key="device.variant" value="Cortex R.IWR1443"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_64.projectspec">
					<filter.ref ref.id="filter_2172492044235"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_IWR1443"/>
							<attribute key="device.variant" value="Cortex R.IWR1443"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_65.projectspec">
					<filter.ref ref.id="filter_2172492044235"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_IWR1443"/>
							<attribute key="device.variant" value="Cortex R.IWR1443"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_66.projectspec">
					<filter.ref ref.id="filter_2172492044235"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_IWR1443"/>
							<attribute key="device.variant" value="Cortex R.IWR1443"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_67.projectspec">
					<filter.ref ref.id="filter_2172492044235"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_IWR1443"/>
							<attribute key="device.variant" value="Cortex R.IWR1443"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_68.projectspec">
					<filter.ref ref.id="filter_2172492044235"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_IWR1443"/>
							<attribute key="device.variant" value="Cortex R.IWR1443"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_69.projectspec">
					<filter.ref ref.id="filter_2172492044235"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_IWR1443"/>
							<attribute key="device.variant" value="Cortex R.IWR1443"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_71.projectspec">
					<filter.ref ref.id="filter_2172492044235"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_IWR1443"/>
							<attribute key="device.variant" value="Cortex R.IWR1443"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_72.projectspec">
					<filter.ref ref.id="filter_2172492044235"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_IWR1443"/>
							<attribute key="device.variant" value="Cortex R.IWR1443"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_73.projectspec">
					<filter.ref ref.id="filter_2172492044235"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_IWR1443"/>
							<attribute key="device.variant" value="Cortex R.IWR1443"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_70.projectspec">
					<filter.ref ref.id="filter_2172492044235"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_IWR1443"/>
							<attribute key="device.variant" value="Cortex R.IWR1443"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
		</contents>
		<contents name="IWR1642" desc="IWR1642" icon="plugin://icons/obj16/target.png">
			<contents name="Cortex R [ARM]" desc="Cortex R [ARM]" icon="plugin://icons/obj16/core.png">
				<filter id="filter_2172492494226">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>IWR1642</tag>
					<tag>mmWave Sensors</tag>
					</search.tags>
				</filter>
				<contents name="TI Target Examples" desc="SYS/BIOS Kernel Templates and Examples for TI targets." customPageType="genericNote">
				<filter id="filter_2172493141052">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>IWR1642</tag>
					<tag>mmWave Sensors</tag>
					<tag>TI Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_75.projectspec">
					<filter.ref ref.id="filter_2172493141052"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_IWR1642_CortexR"/>
							<attribute key="device.variant" value="Cortex R.IWR1642"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dynamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_76.projectspec">
					<filter.ref ref.id="filter_2172493141052"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_IWR1642_CortexR"/>
							<attribute key="device.variant" value="Cortex R.IWR1642"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_2172493222972">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>IWR1642</tag>
					<tag>mmWave Sensors</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_89.projectspec">
					<filter.ref ref.id="filter_2172493222972"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_IWR1642_CortexR"/>
							<attribute key="device.variant" value="Cortex R.IWR1642"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_78.projectspec">
					<filter.ref ref.id="filter_2172493222972"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_IWR1642_CortexR"/>
							<attribute key="device.variant" value="Cortex R.IWR1642"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_79.projectspec">
					<filter.ref ref.id="filter_2172493222972"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_IWR1642_CortexR"/>
							<attribute key="device.variant" value="Cortex R.IWR1642"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_80.projectspec">
					<filter.ref ref.id="filter_2172493222972"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_IWR1642_CortexR"/>
							<attribute key="device.variant" value="Cortex R.IWR1642"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_81.projectspec">
					<filter.ref ref.id="filter_2172493222972"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_IWR1642_CortexR"/>
							<attribute key="device.variant" value="Cortex R.IWR1642"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_82.projectspec">
					<filter.ref ref.id="filter_2172493222972"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_IWR1642_CortexR"/>
							<attribute key="device.variant" value="Cortex R.IWR1642"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_83.projectspec">
					<filter.ref ref.id="filter_2172493222972"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_IWR1642_CortexR"/>
							<attribute key="device.variant" value="Cortex R.IWR1642"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_84.projectspec">
					<filter.ref ref.id="filter_2172493222972"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_IWR1642_CortexR"/>
							<attribute key="device.variant" value="Cortex R.IWR1642"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_86.projectspec">
					<filter.ref ref.id="filter_2172493222972"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_IWR1642_CortexR"/>
							<attribute key="device.variant" value="Cortex R.IWR1642"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_87.projectspec">
					<filter.ref ref.id="filter_2172493222972"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_IWR1642_CortexR"/>
							<attribute key="device.variant" value="Cortex R.IWR1642"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_88.projectspec">
					<filter.ref ref.id="filter_2172493222972"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_IWR1642_CortexR"/>
							<attribute key="device.variant" value="Cortex R.IWR1642"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_85.projectspec">
					<filter.ref ref.id="filter_2172493222972"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_IWR1642_CortexR"/>
							<attribute key="device.variant" value="Cortex R.IWR1642"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
			</contents>
			<contents name="C67XX [C6000]" desc="C67XX [C6000]" icon="plugin://icons/obj16/core.png">
				<filter id="filter_2172493683488">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>IWR1642</tag>
					<tag>mmWave Sensors</tag>
					</search.tags>
				</filter>
				<contents name="TI Target Examples" desc="SYS/BIOS Kernel Templates and Examples for TI targets." customPageType="genericNote">
				<filter id="filter_2172493707381">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>IWR1642</tag>
					<tag>mmWave Sensors</tag>
					<tag>TI Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_281.projectspec">
					<filter.ref ref.id="filter_2172493707381"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_IWR1642_C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.IWR1642"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dynamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_282.projectspec">
					<filter.ref ref.id="filter_2172493707381"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_IWR1642_C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.IWR1642"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_2172493756305">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>IWR1642</tag>
					<tag>mmWave Sensors</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_295.projectspec">
					<filter.ref ref.id="filter_2172493756305"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_IWR1642_C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.IWR1642"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_284.projectspec">
					<filter.ref ref.id="filter_2172493756305"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_IWR1642_C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.IWR1642"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_285.projectspec">
					<filter.ref ref.id="filter_2172493756305"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_IWR1642_C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.IWR1642"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_286.projectspec">
					<filter.ref ref.id="filter_2172493756305"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_IWR1642_C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.IWR1642"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_287.projectspec">
					<filter.ref ref.id="filter_2172493756305"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_IWR1642_C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.IWR1642"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_288.projectspec">
					<filter.ref ref.id="filter_2172493756305"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_IWR1642_C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.IWR1642"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_289.projectspec">
					<filter.ref ref.id="filter_2172493756305"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_IWR1642_C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.IWR1642"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_290.projectspec">
					<filter.ref ref.id="filter_2172493756305"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_IWR1642_C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.IWR1642"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_292.projectspec">
					<filter.ref ref.id="filter_2172493756305"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_IWR1642_C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.IWR1642"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_293.projectspec">
					<filter.ref ref.id="filter_2172493756305"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_IWR1642_C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.IWR1642"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_294.projectspec">
					<filter.ref ref.id="filter_2172493756305"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_IWR1642_C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.IWR1642"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_291.projectspec">
					<filter.ref ref.id="filter_2172493756305"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_IWR1642_C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.IWR1642"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
			</contents>
		</contents>
		<contents name="IWR1843" desc="IWR1843" icon="plugin://icons/obj16/target.png">
			<contents name="Cortex R [ARM]" desc="Cortex R [ARM]" icon="plugin://icons/obj16/core.png">
				<filter id="filter_2172494074030">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>IWR1843</tag>
					<tag>mmWave Sensors</tag>
					</search.tags>
				</filter>
				<contents name="TI Target Examples" desc="SYS/BIOS Kernel Templates and Examples for TI targets." customPageType="genericNote">
				<filter id="filter_2172494700660">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>IWR1843</tag>
					<tag>mmWave Sensors</tag>
					<tag>TI Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_2172494700660"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_IWR1843_CortexR"/>
							<attribute key="device.variant" value="Cortex R.IWR1843"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dynamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_2172494700660"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_IWR1843_CortexR"/>
							<attribute key="device.variant" value="Cortex R.IWR1843"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_2172494782011">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>IWR1843</tag>
					<tag>mmWave Sensors</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_2172494782011"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_IWR1843_CortexR"/>
							<attribute key="device.variant" value="Cortex R.IWR1843"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_2172494782011"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_IWR1843_CortexR"/>
							<attribute key="device.variant" value="Cortex R.IWR1843"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_2172494782011"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_IWR1843_CortexR"/>
							<attribute key="device.variant" value="Cortex R.IWR1843"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_2172494782011"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_IWR1843_CortexR"/>
							<attribute key="device.variant" value="Cortex R.IWR1843"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_2172494782011"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_IWR1843_CortexR"/>
							<attribute key="device.variant" value="Cortex R.IWR1843"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_2172494782011"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_IWR1843_CortexR"/>
							<attribute key="device.variant" value="Cortex R.IWR1843"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_2172494782011"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_IWR1843_CortexR"/>
							<attribute key="device.variant" value="Cortex R.IWR1843"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_2172494782011"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_IWR1843_CortexR"/>
							<attribute key="device.variant" value="Cortex R.IWR1843"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_2172494782011"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_IWR1843_CortexR"/>
							<attribute key="device.variant" value="Cortex R.IWR1843"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_2172494782011"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_IWR1843_CortexR"/>
							<attribute key="device.variant" value="Cortex R.IWR1843"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_2172494782011"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_IWR1843_CortexR"/>
							<attribute key="device.variant" value="Cortex R.IWR1843"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_2172494782011"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_IWR1843_CortexR"/>
							<attribute key="device.variant" value="Cortex R.IWR1843"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
			</contents>
			<contents name="C67XX [C6000]" desc="C67XX [C6000]" icon="plugin://icons/obj16/core.png">
				<filter id="filter_2172495212091">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>IWR1843</tag>
					<tag>mmWave Sensors</tag>
					</search.tags>
				</filter>
				<contents name="TI Target Examples" desc="SYS/BIOS Kernel Templates and Examples for TI targets." customPageType="genericNote">
				<filter id="filter_2172495238829">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>IWR1843</tag>
					<tag>mmWave Sensors</tag>
					<tag>TI Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_251.projectspec">
					<filter.ref ref.id="filter_2172495238829"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_IWR1843_C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.IWR1843"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dynamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_252.projectspec">
					<filter.ref ref.id="filter_2172495238829"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_IWR1843_C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.IWR1843"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_2172495308802">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>IWR1843</tag>
					<tag>mmWave Sensors</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_265.projectspec">
					<filter.ref ref.id="filter_2172495308802"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_IWR1843_C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.IWR1843"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_254.projectspec">
					<filter.ref ref.id="filter_2172495308802"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_IWR1843_C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.IWR1843"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_255.projectspec">
					<filter.ref ref.id="filter_2172495308802"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_IWR1843_C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.IWR1843"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_256.projectspec">
					<filter.ref ref.id="filter_2172495308802"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_IWR1843_C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.IWR1843"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_257.projectspec">
					<filter.ref ref.id="filter_2172495308802"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_IWR1843_C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.IWR1843"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_258.projectspec">
					<filter.ref ref.id="filter_2172495308802"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_IWR1843_C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.IWR1843"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_259.projectspec">
					<filter.ref ref.id="filter_2172495308802"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_IWR1843_C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.IWR1843"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_260.projectspec">
					<filter.ref ref.id="filter_2172495308802"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_IWR1843_C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.IWR1843"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_262.projectspec">
					<filter.ref ref.id="filter_2172495308802"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_IWR1843_C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.IWR1843"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_263.projectspec">
					<filter.ref ref.id="filter_2172495308802"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_IWR1843_C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.IWR1843"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_264.projectspec">
					<filter.ref ref.id="filter_2172495308802"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_IWR1843_C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.IWR1843"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_261.projectspec">
					<filter.ref ref.id="filter_2172495308802"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_IWR1843_C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.IWR1843"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
			</contents>
		</contents>
		<contents name="IWR6843" desc="IWR6843" icon="plugin://icons/obj16/target.png">
			<contents name="Cortex R [ARM]" desc="Cortex R [ARM]" icon="plugin://icons/obj16/core.png">
				<filter id="filter_2172495628802">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>IWR6843</tag>
					<tag>mmWave Sensors</tag>
					</search.tags>
				</filter>
				<contents name="TI Target Examples" desc="SYS/BIOS Kernel Templates and Examples for TI targets." customPageType="genericNote">
				<filter id="filter_2172496221868">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>IWR6843</tag>
					<tag>mmWave Sensors</tag>
					<tag>TI Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_0.projectspec">
					<filter.ref ref.id="filter_2172496221868"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_IWR6843_CortexR"/>
							<attribute key="device.variant" value="Cortex R.IWR6843"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dynamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_1.projectspec">
					<filter.ref ref.id="filter_2172496221868"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_IWR6843_CortexR"/>
							<attribute key="device.variant" value="Cortex R.IWR6843"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_2172496372908">
					<devices><device>ARM</device></devices>
					<search.tags>
					<tag>IWR6843</tag>
					<tag>mmWave Sensors</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_14.projectspec">
					<filter.ref ref.id="filter_2172496372908"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_IWR6843_CortexR"/>
							<attribute key="device.variant" value="Cortex R.IWR6843"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_3.projectspec">
					<filter.ref ref.id="filter_2172496372908"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_IWR6843_CortexR"/>
							<attribute key="device.variant" value="Cortex R.IWR6843"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_4.projectspec">
					<filter.ref ref.id="filter_2172496372908"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_IWR6843_CortexR"/>
							<attribute key="device.variant" value="Cortex R.IWR6843"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_5.projectspec">
					<filter.ref ref.id="filter_2172496372908"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_IWR6843_CortexR"/>
							<attribute key="device.variant" value="Cortex R.IWR6843"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_6.projectspec">
					<filter.ref ref.id="filter_2172496372908"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_IWR6843_CortexR"/>
							<attribute key="device.variant" value="Cortex R.IWR6843"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_7.projectspec">
					<filter.ref ref.id="filter_2172496372908"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_IWR6843_CortexR"/>
							<attribute key="device.variant" value="Cortex R.IWR6843"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_8.projectspec">
					<filter.ref ref.id="filter_2172496372908"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_IWR6843_CortexR"/>
							<attribute key="device.variant" value="Cortex R.IWR6843"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_9.projectspec">
					<filter.ref ref.id="filter_2172496372908"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_IWR6843_CortexR"/>
							<attribute key="device.variant" value="Cortex R.IWR6843"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_11.projectspec">
					<filter.ref ref.id="filter_2172496372908"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_IWR6843_CortexR"/>
							<attribute key="device.variant" value="Cortex R.IWR6843"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_12.projectspec">
					<filter.ref ref.id="filter_2172496372908"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_IWR6843_CortexR"/>
							<attribute key="device.variant" value="Cortex R.IWR6843"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_13.projectspec">
					<filter.ref ref.id="filter_2172496372908"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_IWR6843_CortexR"/>
							<attribute key="device.variant" value="Cortex R.IWR6843"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_10.projectspec">
					<filter.ref ref.id="filter_2172496372908"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_IWR6843_CortexR"/>
							<attribute key="device.variant" value="Cortex R.IWR6843"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
			</contents>
			<contents name="C67XX [C6000]" desc="C67XX [C6000]" icon="plugin://icons/obj16/core.png">
				<filter id="filter_2172496864997">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>IWR6843</tag>
					<tag>mmWave Sensors</tag>
					</search.tags>
				</filter>
				<contents name="TI Target Examples" desc="SYS/BIOS Kernel Templates and Examples for TI targets." customPageType="genericNote">
				<filter id="filter_2172496890312">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>IWR6843</tag>
					<tag>mmWave Sensors</tag>
					<tag>TI Target Examples</tag>
					</search.tags>
				</filter>
				<content name="Minimal" desc="This example has a fairly minimal .cfg which is set up for a static application where all objects are defined statically (via configuration tool and/or target structures).  Dynamic memory allocation has been disabled. The .cfg file creates a single task which has a couple of print statements and a Task_sleep() call." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_251.projectspec">
					<filter.ref ref.id="filter_2172496890312"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="minimal_IWR6843_C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.IWR6843"/>
						</attributes>
					</type>
				</content>
				<content name="Typical" desc="This example has a .cfg populated with a typical set of options and parameters.  This .cfg file is a good starting point for many applications.  Dynamic memory allocation and runtime create of is supported.  Unlike the 'Minimal' example, the single task is created at runtime using the Task_create() API." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\com_ti_rtsc_sysbios_example_252.projectspec">
					<filter.ref ref.id="filter_2172496890312"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="typical_IWR6843_C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.IWR6843"/>
						</attributes>
					</type>
				</content>
				<contents name="Generic Examples" desc="Generic SYS/BIOS Examples. These examples are not optimized for code and data memory usage and may not build on platforms with memory constraints." customPageType="genericNote">
				<filter id="filter_2172496941228">
					<devices><device>C6000</device></devices>
					<search.tags>
					<tag>IWR6843</tag>
					<tag>mmWave Sensors</tag>
					<tag>Generic Examples</tag>
					</search.tags>
				</filter>
				<content name="Benchmark Example" desc="This example gathers and prints benchmark timing data for some representative SYS/BIOS APIs." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_265.projectspec">
					<filter.ref ref.id="filter_2172496941228"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="benchmark_IWR6843_C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.IWR6843"/>
						</attributes>
					</type>
				</content>
				<content name="C++ Example (bigtime)" desc="In this program, C++ is used to create a real-time clock/calendar." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_254.projectspec">
					<filter.ref ref.id="filter_2172496941228"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="bigtime_IWR6843_C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.IWR6843"/>
						</attributes>
					</type>
				</content>
				<content name="Clock Example" desc="The clock example shows how to use the ti.sysbios.knl.Clock module to create one-shot and periodic Clock Instances. Clock Instances are essentially functions that run after a certain number of Clock ticks." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_255.projectspec">
					<filter.ref ref.id="filter_2172496941228"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="clock_IWR6843_C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.IWR6843"/>
						</attributes>
					</type>
				</content>
				<content name="Error Example" desc="This example shows how to use Error_Blocks to catch runtime errors. An Error_Block is passed to Task_create() and then checked for create failure. When no Error_Block is passed, the application will terminate when an error occurs. The error.cfg file shows how to plug an error hook." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_256.projectspec">
					<filter.ref ref.id="filter_2172496941228"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="error_IWR6843_C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.IWR6843"/>
						</attributes>
					</type>
				</content>
				<content name="Event Example" desc="The event example shows how to use the ti.sysbios.knl.Event module. The ti.sysbios.knl.Event module solves the 'Wait on Multiple' problem. In this example a reader task waits on several events." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_257.projectspec">
					<filter.ref ref.id="filter_2172496941228"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="event_IWR6843_C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.IWR6843"/>
						</attributes>
					</type>
				</content>
				<content name="Hello Example" desc="The hello example serves as a basic sanity check program for SYS/BIOS. It demonstrates how to print the string 'hello world' to stdout." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_258.projectspec">
					<filter.ref ref.id="filter_2172496941228"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="hello_IWR6843_C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.IWR6843"/>
						</attributes>
					</type>
				</content>
				<content name="Log Example" desc="This module shows how to use Log_info(), Log_error() and Log_warning() in a simple application. It shows how to enable USER1 logs for the Task module in the cfg file." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_259.projectspec">
					<filter.ref ref.id="filter_2172496941228"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="log_IWR6843_C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.IWR6843"/>
						</attributes>
					</type>
				</content>
				<content name="Memory Example" desc="This example shows the use of xdc.runtime.Memory module and different xdc.runtime.IHeap implementations to manage memory. A system heap is created statically using ti.sysbios.heaps.HeapMem." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_260.projectspec">
					<filter.ref ref.id="filter_2172496941228"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="memory_IWR6843_C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.IWR6843"/>
						</attributes>
					</type>
				</content>
				<content name="Small Example" desc="This simple example uses the Clock module to periodically post a software interrupt (Swi), and increments counters.  The configuration disables non-essential and debug-related SYS/BIOS features to reduce the application memory footprint." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_262.projectspec">
					<filter.ref ref.id="filter_2172496941228"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="small_IWR6843_C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.IWR6843"/>
						</attributes>
					</type>
				</content>
				<content name="Static Example" desc="The static example focuses on SYS/BIOS configuration. It shows how to use and configure various modules, create static Instances and modify Program level configuration parameters." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_263.projectspec">
					<filter.ref ref.id="filter_2172496941228"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="static_IWR6843_C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.IWR6843"/>
						</attributes>
					</type>
				</content>
				<content name="Swi Example" desc="The swi example shows how to use the ti.sysbios.knl.Swi module. It demonstrates how the various Swi APIs work." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_264.projectspec">
					<filter.ref ref.id="filter_2172496941228"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="swi_IWR6843_C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.IWR6843"/>
						</attributes>
					</type>
				</content>
				<content name="Task Mutex Example" desc="This example shows the use of two tasks and one semaphore to protect data access." href="C:\ti\bios_6_53_02_00\resources\tiTargetExamples\genericExamples\com_ti_rtsc_sysbios_example_261.projectspec">
					<filter.ref ref.id="filter_2172496941228"/>
					<type>projectSpec
						<attributes>
							<attribute key="project.name" value="task_IWR6843_C67XX"/>
							<attribute key="device.variant" value="TMS320C67XX.IWR6843"/>
						</attributes>
					</type>
				</content>
				</contents>
				</contents>
			</contents>
		</contents>
	</contents>

</resource.explorer>
